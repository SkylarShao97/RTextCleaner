source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
devtools :: bulid（）
devtools :: build()
dvetools :: document()
devtools :: document()
devtools :: build()
devtools :: document()
devtools :: load_all()
separate_code_prompt()
devtools :: build()
devtools :: document()
devtools :: load_all()
separate_code_prompt
separate_code_prompt("[explain this code
import collections
import math
import os
import pickle
import typing
import nltk
from nltk.corpus import udhr
from ovos_utils.xdg_utils import xdg_data_home
class LMLangClassifier:
def __init__(self, path=None):
if path:
with open(path, "rb") as f:
saprate_code_prompt(explain this code
separate_code_prompt('explain this code
import collections
import math
import os
import pickle
import typing
import nltk
from nltk.corpus import udhr
from ovos_utils.xdg_utils import xdg_data_home
class LMLangClassifier:
def __init__(self, path=None):
if path:
with open(path, "rb") as f:
self.language_models = pickle.load(f)
print(f"lang models loaded from {path}")
else:
self.fit()
def fit(self, save=True):
model = f"{xdg_data_home()}/ovos-classifiers/lang_lms.pkl"
os.makedirs(os.path.dirname(model), exist_ok=True)
if os.path.isfile(model):
with open(model, "rb") as f:
self.language_models = pickle.load(f)
print(f"lang models loaded from {model}")
return model
nltk.download('udhr')  # udhr = Universal Declaration of Human Rights
summarize()
summarise('')
summarise('111')
source("C:/Users/admin/RTextCleaner/R/separation1.R")
devtools :: build()
devtools :: document()
devtools::build()
devtools :: document()
devtools::build()
devtools::document()
rm(list = c("process_text"))
devtools::document()
devtools::build()
devtools::document()
devtools::load_all()
separate_code_prompt(processed_output.csv)
data <- read_csv("NL_code_difference_raw.csv")
data <- read_csv("proccessd_output.csv")
data <- read_csv("proccessd_output.csv")
devtools::build()
data <- read_csv("proccessd_output.csv")
getwd()
setwd("C:/Users/admin/RTextCleaner")
data <- read_csv("proccessd_output.csv")
list.files()
file.exists("proccessd_output.csv")
file.exists("processed_output.csv")
data <- read_csv("processed_output.csv")
separate_code_prompt(data$prompt)
separate_code_prompt(data$Prompt)
rm(prompt)
print(prompt)
devtools::build()
devtools:: document()
devtools:: load_all()
separate_code_prompt(data$Prompt)
summarise(data$Prompt)
devtools:: build()
devtools:: document()
devtools:: load_all()
separate_code_prompt(data$Prompt)
devtools::build()
devtools:: document()
devtools:: load_all()
separate_code_prompt(data$Prompt)
devtools::build()
devtools:: load_all()
data <- read.csv('processed_output.csv')
separate_code_prompt(data$Prompt)
devtools::build()
devtools::document()
devtools::load_all()
separate_code_prompt(data$Prompt)
data <- read.csv('processed_output.csv')
separate_code_prompt(data$Prompt)
View(data)
View(data)
devtools::build()
devtools::document()
devtools::load_all()
data <_ read.csv('proccessed_output.csv')
dara <- read.csv('proccessed_output.csv')
data <- read.csv('processed_output.csv')
data$Prompt
data <- data[1, , drop = FALSE]
separate_code_prompt(data$Prompt)
separate_code_prompt()
separate_code_prompt(data)
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
separate_code_prompt()
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("D:/UBC/block5/534/separation.R")
source("D:/UBC/block5/534/separation.R")
source("D:/UBC/block5/534/separation.R")
source("D:/UBC/block5/534/separation.R")
source("D:/UBC/block5/534/separation.R")
source("D:/UBC/block5/534/separation.R")
source("D:/UBC/block5/534/separation.R")
source("D:/UBC/block5/534/separation.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/summarize.R")
source("C:/Users/admin/RTextCleaner/R/summarize.R")
source("C:/Users/admin/RTextCleaner/R/summarize.R")
source("C:/Users/admin/RTextCleaner/R/summarize.R")
source("C:/Users/admin/RTextCleaner/R/summarize.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("C:/Users/admin/RTextCleaner/R/11.R")
source("C:/Users/admin/RTextCleaner/R/11.R")
source("C:/Users/admin/RTextCleaner/R/11.R")
source("C:/Users/admin/RTextCleaner/R/11.R")
source("C:/Users/admin/RTextCleaner/R/11.R")
source("C:/Users/admin/RTextCleaner/R/11.R")
source("C:/Users/admin/RTextCleaner/R/11.R")
source("C:/Users/admin/RTextCleaner/R/11.R")
source("D:/UBC/block5/534/separation.R")
source("C:/Users/admin/RTextCleaner/R/11.R")
source("D:/UBC/block5/534/separation.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/summarize.R")
source("C:/Users/admin/RTextCleaner/R/summarize.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/modified.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
source("C:/Users/admin/RTextCleaner/R/separation1.R")
devtools:: build()
devtools:: document()
devtools :: load_all()
data <- read.csv('processed_ouput.csv')
data <- read.csv('processed_output.csv')
separate_code_prompt(data$Prompt)
